import 'package:ado_dad_user/common/app_colors.dart';
import 'package:ado_dad_user/common/app_textstyle.dart';
import 'package:ado_dad_user/common/widgets/dropdown_widget.dart';
import 'package:ado_dad_user/common/widgets/get_input.dart';
import 'package:ado_dad_user/features/seller/bloc/seller_bloc.dart';
import 'package:ado_dad_user/models/advertisement/advertisement_model.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:go_router/go_router.dart';

class AddAdvertisementForm1 extends StatefulWidget {
  final String categoryTitle;
  const AddAdvertisementForm1({super.key, required this.categoryTitle});

  @override
  State<AddAdvertisementForm1> createState() => _AddAdvertisementForm1State();
}

class _AddAdvertisementForm1State extends State<AddAdvertisementForm1> {
  final GlobalKey<FormState> _sellerFormKey = GlobalKey<FormState>();
  String? _selectedType;
  String _description = '';
  int _price = 0;
  // String? _selectedState;
  // String _city = '';
  // String _district = '';
  Category? _category =
      Category(id: '67b33bf65c54230dac730688', name: 'Default Category');

  // List<String> getStates() {
  //   return [
  //     'Andhra Pradesh',
  //     'Arunachal Pradesh',
  //     'Assam',
  //     'Bihar',
  //     'Chhattisgarh',
  //     'Goa',
  //     'Gujarat',
  //     'Haryana',
  //     'Himachal Pradesh',
  //     'Jharkhand',
  //     'Karnataka',
  //     'Kerala',
  //     'Madhya Pradesh',
  //     'Maharashtra',
  //     'Manipur',
  //     'Meghalaya',
  //     'Mizoram',
  //     'Nagaland',
  //     'Odisha',
  //     'Punjab',
  //     'Rajasthan',
  //     'Sikkim',
  //     'Tamil Nadu',
  //     'Telangana',
  //     'Tripura',
  //     'Uttar Pradesh',
  //     'Uttarakhand',
  //     'West Bengal',
  //   ];
  // }

  void _addAdvertisement() {
    if (_sellerFormKey.currentState!.validate()) {
      _sellerFormKey.currentState!.save();

      final newAdd = AdvertisementModel(
        id: '', // ID will be generated by backend
        type: _selectedType!,
        category: _category, // Pass the entire Category object
        price: _price,
        state: '',
        city: '',
        district: '',
        description: _description,
        imageUrls: [],
      );

      context.read<SellerBloc>().add(SellerEvent.addAdvertisement(newAdd));
      // context.go('/vehicle-more-detail');

      // Future.delayed(const Duration(milliseconds: 500), () {
      //   _showSuccessPopup(context, "User has been added successfully.");
      // });
    }
  }

  // void _showSuccessPopup(BuildContext context, String message) {
  //   showDialog(
  //     context: context,
  //     builder: (context) {
  //       return AlertDialog(
  //         title: const Text("Success"),
  //         content: Text(message),
  //         actions: [
  //           TextButton(
  //             onPressed: () {
  //               context.pop();
  //               // context.go('/users');
  //             },
  //             child: const Text("OK"),
  //           ),
  //         ],
  //       );
  //     },
  //   );
  // }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.whiteColor,
      appBar: PreferredSize(
        preferredSize: Size.fromHeight(40.0),
        child: AppBar(
          backgroundColor: AppColors.whiteColor,
          leading: IconButton(
            icon: Icon(Icons.arrow_back, color: Colors.black),
            onPressed: () {
              // context
              //     .read<AddItemBloc>()
              //     .add(const AddItemEvent.navigateCategory());
              context.pop();
            },
          ),
          title: Text(
            'Post your Ad',
            style: AppTextstyle.appbarText,
          ),
        ),
      ),
      body: BlocConsumer<SellerBloc, SellerState>(
        listener: (context, state) {
          print("📣 State changed: $state");
          state.maybeWhen(
            success: (ad) {
              print('executing????????????????   ${ad.id}');
              if (ad.id.isNotEmpty) {
                print('ID received: ${ad.id}');
                Future.microtask(() {
                  context.go('/vehicle-more-detail', extra: ad.id);
                });
              } else {
                print("❌ ID is empty — cannot navigate");
              }
            },
            orElse: () {},
          );
        },
        builder: (context, state) {
          return SingleChildScrollView(
            child: Form(
                key: _sellerFormKey,
                child: Column(
                  children: [
                    Divider(thickness: 2),
                    SizedBox(
                      height: 50,
                      child: Padding(
                        padding: const EdgeInsets.symmetric(horizontal: 16),
                        child: Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Expanded(
                              child: Text(
                                "Sell your ${widget.categoryTitle}",
                                style: AppTextstyle.sellCategoryText,
                              ),
                            ),
                            const SizedBox(width: 20),
                            GestureDetector(
                              onTap: () {
                                context.go('/item-category');
                              },
                              child: Container(
                                height: 35,
                                width: 135,
                                decoration: BoxDecoration(
                                  borderRadius: BorderRadius.circular(8),
                                  border: Border.all(
                                    color: AppColors.primaryColor,
                                  ),
                                ),
                                child: Center(
                                  child: Text(
                                    "Change Category",
                                    style: AppTextstyle
                                        .changeCategoryButtonTextStyle,
                                  ),
                                ),
                              ),
                            )
                          ],
                        ),
                      ),
                    ),
                    Divider(),
                    Container(
                      width: double.infinity,
                      color: AppColors.whiteColor,
                      child: Padding(
                        padding: EdgeInsets.symmetric(horizontal: 16),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            SizedBox(height: 10),
                            Text(
                              'General Details',
                              style: AppTextstyle.sectionTitleTextStyle,
                            ),
                            SizedBox(height: 20),
                            DropdownWidget(
                              labelText: 'Type *',
                              items: const ['Vehicle', 'Property'],
                              selectedValue: _selectedType,
                              onChanged: (value) => setState(() {
                                _selectedType = value!;
                              }),
                              errorMsg: 'Select Type',
                            ),
                            SizedBox(height: 10),
                            GetInput(
                              label: 'Category *',
                              initialValue: _category?.id,
                              onSaved: (value) => _category = Category(
                                  id: _category?.id ?? '', name: value ?? ''),
                            ),
                            SizedBox(height: 10),
                            GetInput(
                              label: 'Price *',
                              initialValue: '',
                              onSaved: (value) =>
                                  _price = int.parse(value ?? '0'),
                              isNumberField: true,
                              // isPrice: true,
                            ),
                            SizedBox(height: 10),
                            // DropdownWidget(
                            //   labelText: 'State *',
                            //   items: getStates(),
                            //   selectedValue: _selectedState,
                            //   onChanged: (value) => setState(() {
                            //     _selectedState = value!;
                            //   }),
                            //   errorMsg: 'Select State',
                            // ),
                            // SizedBox(height: 10),
                            // GetInput(
                            //   label: 'City *',
                            //   initialValue: _city,
                            //   onSaved: (value) => _city = value!,
                            // ),
                            // SizedBox(height: 10),
                            // GetInput(
                            //   label: 'District *',
                            //   initialValue: _district,
                            //   onSaved: (value) => _district = value!,
                            // ),
                            // SizedBox(height: 10),
                            GetInput(
                              label: 'Description',
                              initialValue: '',
                              onSaved: (value) => _description = value!,
                              maxLines: 5,
                            ),
                            SizedBox(height: 80),
                            SizedBox(
                              height: 50,
                              child: ElevatedButton(
                                onPressed:
                                    state is Loading ? null : _addAdvertisement,
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: AppColors.primaryColor,
                                  foregroundColor: AppColors.whiteColor,
                                  // minimumSize: const Size(158, 27),
                                  // fixedSize: const Size(316, 54),
                                  elevation: 5,
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                ),
                                child: state is Loading
                                    ? const SizedBox(
                                        height: 20,
                                        width: 20,
                                        child: CircularProgressIndicator(
                                            strokeWidth: 2,
                                            color: Colors.white),
                                      )
                                    : Center(
                                        child: Text(
                                          "Submit",
                                          style: AppTextstyle.buttonText,
                                        ),
                                      ),
                              ),
                            ),
                            SizedBox(height: 30)
                          ],
                        ),
                      ),
                    )
                  ],
                )),
          );
        },
      ),
    );
  }
}
